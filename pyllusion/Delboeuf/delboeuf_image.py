import numpy as np
import PIL.Image
import PIL.ImageDraw
import PIL.ImageFilter
import PIL.ImageFont
import PIL.ImageOps

from ..image import image_circle
from ..psychopy.psychopy_circle import psychopy_circle
from .delboeuf_parameters import _delboeuf_parameters


def _delboeuf_image(
    parameters=None, width=800, height=600, outline=10, background="white", **kwargs
):
    """Create a PIL image of the Delboeuf illusion.


    The Delboeuf illusion is an optical illusion of relative size perception,
    where circles of identical size appear as different because of their surrounding context.

    Parameters
    ----------
    parameters : dict
        Parameters of the delbeouf illusion generated by `delboeuf_parameters()`.
    width : int
        Width of the returned image.
    height : int
        Height of the returned image.
    outline : float
        The width of the outline of the circles in the illusion, passed into `image_circle()`.
    background : str
        Color of the background.
    **kwargs
        Additional arguments passed into `delboeuf_parameters()`.

    Returns
    -------
    Image
        Image of the Delboeuf illusion, defaults to 800 x 600 pixels.
        Can be resized
        (`resize()`, See https://pillow.readthedocs.io/en/stable/reference/Image.html#PIL.Image.Image.resize)
        and saved in different file formats
        (`save()` See https://pillow.readthedocs.io/en/stable/handbook/image-file-formats.html).

    Examples
    ---------
    >>> import pyllusion
    >>>
    >>> parameters = pyllusion.delboeuf_parameters(illusion_strength=1, difference=-2)
    >>> pyllusion.delboeuf_image(parameters)
    """
    # Create white canvas and get drawing context
    if parameters is None:
        parameters = _delboeuf_parameters(**kwargs)

    # Background
    image = PIL.Image.new("RGB", (width, height), color=background)

    # Loop circles
    for side in ["Left", "Right"]:
        # Draw outer circle
        size_outer = parameters["Size_Outer_" + side]
        image = image_circle(
            image=image,
            x=parameters["Position_" + side],
            y=0,
            size=size_outer,
            color=(0, 0, 0, 0),
            outline=outline,
        )

        # Draw inner circle
        size_inner = parameters["Size_Inner_" + side]
        image = image_circle(
            image=image, x=parameters["Position_" + side], y=0, size=size_inner, color="red"
        )

    return image
